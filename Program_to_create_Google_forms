function myFunction() {
//  Creating source and destination directory
 var folders_with_given_name = DriveApp.getFoldersByName('Trial_JS');
  var destination_folder=DriveApp.getFoldersByName('Trial_JS')
 //var df=destination_folder.getId
 while (folders_with_given_name.hasNext()) {
   var folder = folders_with_given_name.next();
 }
//  Checking whether folder is present
   while (destination_folder.hasNext()) {
   var d_folder = destination_folder.next();
 }
//  Checking csv file on source directory
  var files = folder.getFilesByType(MimeType.CSV);
  
  while (files.hasNext()){
    var file = files.next();
    var filename = file.getName();
    
    var spreadsheet = SpreadsheetApp.create(filename);
    
     var driveFile = DriveApp.getFileById(spreadsheet.getId());
    d_folder.addFile(driveFile)
    DriveApp.removeFile(driveFile)
    
    //var sheet= spreadsheet.insertSheet();
    var csvData = Utilities.parseCsv(file.getBlob().getDataAsString(),'\t');
    for(var row_idx=0;row_idx<csvData.length;row_idx++){
      for(var col_idx=0;col_idx<csvData[0].length;col_idx++){
        csvData[row_idx][col_idx] = csvData[row_idx][col_idx].trim();
      }
    }
    var sheet = spreadsheet.getActiveSheet();

    sheet.getRange(1, 1, csvData.length, csvData[0].length).setValues(csvData);
    

  //var Spreadsheet = spreadsheet
 var gsheet_name = 'Sheet1'//Spreadsheet.getName();
 //var ss =  //spreadsheet.getSheetByName(gsheet_name);
 var range = sheet.getDataRange();//ss.getDataRange(); 
 var data = range.getValues();
 var numberRows = range.getNumRows();
 var numberColumns = range.getNumColumns();
 var firstRow = 1;
 var new_form = FormApp.create(filename);
 new_form.setProgressBar(true);
 new_form.setCollectEmail(true);
 //new_form.setRequireLogin(false);
 new_form.setAllowResponseEdits(true);
 new_form.setLimitOneResponsePerUser(true);
 new_form.setShowLinkToRespondAgain(false)
 var response_ss = SpreadsheetApp.create(filename+'response');
    
 var response_File = DriveApp.getFileById(response_ss.getId());
 d_folder.addFile(response_File)
 DriveApp.removeFile(response_File)
 
 new_form.setDestination(FormApp.DestinationType.SPREADSHEET, response_ss.getId()); 
 
 var form_File = DriveApp.getFileById(new_form.getId());
 d_folder.addFile(form_File)
 DriveApp.removeFile(form_File)
 
 var item = new_form.addMultipleChoiceItem();
 item.setTitle('I understand that data created during this study belong to M.Sc. student Shardul Suryawanshi, National University of Galway for his Masters Project.')
     .setChoices([
         item.createChoice('Yes', FormApp.PageNavigationType.CONTINUE),
         item.createChoice('No', FormApp.PageNavigationType.RESTART)
     ]);
 item.setRequired(true);
 
  
 new_form.addPageBreakItem().setTitle('Inter-Annotator Agreement');

  var agreement = new_form.addCheckboxItem();
    agreement.setTitle('Below are the reviewerâ€™s guidelines for labelling the data:\n\n1.	Reviewer must review the meme in two categories either offensive or Non-offensive.\n\n2.	Memes can be deemed offensive if it intends following:\n\na.	Personal Attack\nb.	Homophobic abuse\nc.	Racial abuse\nd.	Attack on Minority \nAnd Non-offensive otherwise\n\n3.	Most of the memes come with an image and caption.\n\n4.	Reviewer must understand that images here are acting as context and play important role in conveying the intention behind it. So indeed, images or text alone sometimes may not be meaningful.')
             .setChoiceValues(['I understood the user Guidelines mentioned above']);
    agreement.setRequired(true);

 // Add another page because navigation has no effect on the last page.
 new_form.addPageBreakItem().setTitle('Thank you for your help!');

 var form_id = new_form.getId();
 var form = FormApp.openById(form_id);
  
 for(var i=0;i<numberRows;i++){
  var questionType = data[i][0]; 
  if (questionType==''){
     continue;
  }

  else if(questionType=='IMAGE'){
   var img = UrlFetchApp.fetch(data[i][3]); 
   form.addImageItem()
     .setTitle(data[i][1]) 
     .setImage(img);
  var rowLength = data[i].length;
  var currentRow = firstRow+i;
  var currentRangeValues = spreadsheet.getSheetByName(gsheet_name).getRange(currentRow,1,1,rowLength).getValues();
  var getSheetRange = spreadsheet.getSheetByName(gsheet_name).getDataRange();
  var numberOfColumnsSheet = getSheetRange.getNumColumns();
  var numberOfOptionsInCurrentRow = numberOfColumnsSheet;
  var lastColumnInRange = String.fromCharCode(64 + (numberOfOptionsInCurrentRow));
  var range_string = 'E' + currentRow + ":" + lastColumnInRange + currentRow;
  var optionsArray = spreadsheet.getSheetByName(gsheet_name).getRange(range_string).getValues();
  var choicesForQuestion =[];
    for (var j=0;j<optionsArray[0].length;j++){
        choicesForQuestion.push(optionsArray[0][j]);
        }
  form.addMultipleChoiceItem()
    .setHelpText(data[i][2])
    .setChoiceValues(choicesForQuestion)
    .setRequired(true);     
  }
  else if(questionType=='PAGE'){
   form.addPageBreakItem()
     .setTitle(data[i][1]) 
     .setHelpText(data[i][2]);   
  } 
  else{
    continue;
  }
 } 

    

  }
}

  

